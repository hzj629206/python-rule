
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = u'statementrightCOMMAnonassocEQUALSnonassocFILTERrightCONDITIONCOLONleftORleftANDnonassocEQNEnonassocLELTGEGTINNIleftADDSUBleftMULFLOORDIVDIVMODrightNEGPOSNOTleftPERIODADD AND COLON COMMA CONDITION DIV EQ EQUALS FILTER FLOAT FLOORDIV GE GT IN INT LBRACKET LE LPAREN LT MOD MUL NE NI NOT OR PERIOD RBRACKET RPAREN STRING SUB SYMBOL VARIABLEstatement : expression_list\n                 | empty\n    expression_list : logical_expressionexpression_list : expression_decl_listexpression_list : expression_decl_list COMMA logical_expressionexpression_decl_list : expression_declexpression_decl_list : expression_decl_list COMMA expression_declexpression_decl : assign_expressionexpression_decl : bind_expressionassign_expression : VARIABLE EQUALS conditional_expressionbind_expression : VARIABLE COLON VARIABLEconditional_expression : logical_expressionconditional_expression : logical_expression CONDITION logical_expression COLON conditional_expressionlogical_expression : logical_expression OR logical_expression\n                  | logical_expression AND logical_expression\n                  | logical_expression EQ logical_expression\n                  | logical_expression NE logical_expression\n                  | logical_expression LE logical_expression\n                  | logical_expression LT logical_expression\n                  | logical_expression GE logical_expression\n                  | logical_expression GT logical_expression\n                  | logical_expression IN logical_expression\n                  | logical_expression NI logical_expression\n                  | logical_expression ADD logical_expression\n                  | logical_expression SUB logical_expression\n                  | logical_expression MUL logical_expression\n                  | logical_expression FLOORDIV logical_expression\n                  | logical_expression DIV logical_expression\n                  | logical_expression MOD logical_expression\n    logical_expression : logical_expression PERIOD SYMBOLlogical_expression : NOT logical_expressionlogical_expression : SUB logical_expression %prec NEGlogical_expression : ADD logical_expression %prec POSlogical_expression : LPAREN logical_expression RPARENlogical_expression : LBRACKET logical_comma_expression RBRACKET\n                  | LBRACKET empty RBRACKET\n    logical_comma_expression : logical_expressionlogical_comma_expression : logical_comma_expression COMMA logical_expressionlogical_expression : FLOATlogical_expression : INTlogical_expression : STRINGlogical_expression : VARIABLElogical_expression : FILTERlogical_expression : SYMBOLempty :'
    
_lr_action_items = {u'SUB':([0,1,3,4,5,6,9,11,14,16,17,18,19,20,21,22,26,27,28,29,30,31,32,33,34,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,73,74,75,76,77,],[1,1,-44,1,-42,31,-41,1,-40,-39,1,-43,1,-32,-42,31,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,31,1,-33,-31,-36,-35,1,31,31,31,31,31,-25,-24,-27,31,-30,31,31,31,-26,-28,31,31,-29,-34,31,31,1,31,1,]),u'SYMBOL':([0,1,4,11,17,19,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,45,50,75,77,],[3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,62,3,3,3,3,3,3,3,3,3,3,3,3,]),u'LBRACKET':([0,1,4,11,17,19,26,27,28,29,30,31,32,33,34,36,37,38,39,40,41,42,43,45,50,75,77,],[4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,]),u'MUL':([3,5,6,9,14,16,18,20,21,22,44,46,47,48,49,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,73,74,76,],[-44,-42,39,-41,-40,-39,-43,-32,-42,39,39,-33,-31,-36,-35,39,39,39,39,39,39,39,-27,39,-30,39,39,39,-26,-28,39,39,-29,-34,39,39,39,]),u'DIV':([3,5,6,9,14,16,18,20,21,22,44,46,47,48,49,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,73,74,76,],[-44,-42,40,-41,-40,-39,-43,-32,-42,40,40,-33,-31,-36,-35,40,40,40,40,40,40,40,-27,40,-30,40,40,40,-26,-28,40,40,-29,-34,40,40,40,]),u'NI':([3,5,6,9,14,16,18,20,21,22,44,46,47,48,49,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,73,74,76,],[-44,-42,28,-41,-40,-39,-43,-32,-42,28,28,-33,-31,-36,-35,28,28,None,None,None,-25,-24,-27,28,-30,None,None,None,-26,-28,28,28,-29,-34,28,28,28,]),u'LE':([3,5,6,9,14,16,18,20,21,22,44,46,47,48,49,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,73,74,76,],[-44,-42,29,-41,-40,-39,-43,-32,-42,29,29,-33,-31,-36,-35,29,29,None,None,None,-25,-24,-27,29,-30,None,None,None,-26,-28,29,29,-29,-34,29,29,29,]),u'RPAREN':([3,9,14,16,18,20,21,44,46,47,48,49,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,],[-44,-41,-40,-39,-43,-32,-42,71,-33,-31,-36,-35,-15,-23,-18,-20,-25,-24,-27,-17,-30,-19,-21,-22,-26,-28,-16,-14,-29,-34,]),u'NE':([3,5,6,9,14,16,18,20,21,22,44,46,47,48,49,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,73,74,76,],[-44,-42,34,-41,-40,-39,-43,-32,-42,34,34,-33,-31,-36,-35,34,34,-23,-18,-20,-25,-24,-27,None,-30,-19,-21,-22,-26,-28,None,34,-29,-34,34,34,34,]),u'LT':([3,5,6,9,14,16,18,20,21,22,44,46,47,48,49,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,73,74,76,],[-44,-42,36,-41,-40,-39,-43,-32,-42,36,36,-33,-31,-36,-35,36,36,None,None,None,-25,-24,-27,36,-30,None,None,None,-26,-28,36,36,-29,-34,36,36,36,]),u'COLON':([3,5,9,14,16,18,20,21,46,47,48,49,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,76,],[-44,25,-41,-40,-39,-43,-32,-42,-33,-31,-36,-35,-15,-23,-18,-20,-25,-24,-27,-17,-30,-19,-21,-22,-26,-28,-16,-14,-29,-34,77,]),u'COMMA':([2,3,9,10,12,13,14,16,18,20,21,22,24,46,47,48,49,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,74,78,],[-6,-44,-41,-9,45,-8,-40,-39,-43,-32,-42,-37,50,-33,-31,-36,-35,-11,-12,-10,-15,-23,-18,-20,-25,-24,-27,-17,-30,-19,-21,-22,-26,-28,-16,-14,-29,-34,-7,-38,-13,]),u'CONDITION':([3,9,14,16,18,20,21,46,47,48,49,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,],[-44,-41,-40,-39,-43,-32,-42,-33,-31,-36,-35,75,-15,-23,-18,-20,-25,-24,-27,-17,-30,-19,-21,-22,-26,-28,-16,-14,-29,-34,]),'$end':([0,2,3,5,6,7,8,9,10,12,13,14,15,16,18,20,21,46,47,48,49,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,78,],[-45,-6,-44,-42,-3,0,-2,-41,-9,-4,-8,-40,-1,-39,-43,-32,-42,-33,-31,-36,-35,-11,-12,-10,-15,-23,-18,-20,-25,-24,-27,-17,-30,-19,-21,-22,-26,-28,-16,-14,-29,-34,-7,-5,-13,]),u'GT':([3,5,6,9,14,16,18,20,21,22,44,46,47,48,49,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,73,74,76,],[-44,-42,37,-41,-40,-39,-43,-32,-42,37,37,-33,-31,-36,-35,37,37,None,None,None,-25,-24,-27,37,-30,None,None,None,-26,-28,37,37,-29,-34,37,37,37,]),u'STRING':([0,1,4,11,17,19,26,27,28,29,30,31,32,33,34,36,37,38,39,40,41,42,43,45,50,75,77,],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),u'PERIOD':([3,5,6,9,14,16,18,20,21,22,44,46,47,48,49,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,73,74,76,],[-44,-42,35,-41,-40,-39,-43,35,-42,35,35,35,35,-36,-35,35,35,35,35,35,35,35,35,35,-30,35,35,35,35,35,35,35,35,-34,35,35,35,]),u'EQUALS':([5,],[26,]),u'ADD':([0,1,3,4,5,6,9,11,14,16,17,18,19,20,21,22,26,27,28,29,30,31,32,33,34,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,73,74,75,76,77,],[17,17,-44,17,-42,32,-41,17,-40,-39,17,-43,17,-32,-42,32,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,32,17,-33,-31,-36,-35,17,32,32,32,32,32,-25,-24,-27,32,-30,32,32,32,-26,-28,32,32,-29,-34,32,32,17,32,17,]),u'LPAREN':([0,1,4,11,17,19,26,27,28,29,30,31,32,33,34,36,37,38,39,40,41,42,43,45,50,75,77,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),u'IN':([3,5,6,9,14,16,18,20,21,22,44,46,47,48,49,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,73,74,76,],[-44,-42,38,-41,-40,-39,-43,-32,-42,38,38,-33,-31,-36,-35,38,38,None,None,None,-25,-24,-27,38,-30,None,None,None,-26,-28,38,38,-29,-34,38,38,38,]),u'VARIABLE':([0,1,4,11,17,19,25,26,27,28,29,30,31,32,33,34,36,37,38,39,40,41,42,43,45,50,75,77,],[5,21,21,21,21,21,51,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,5,21,21,21,]),u'EQ':([3,5,6,9,14,16,18,20,21,22,44,46,47,48,49,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,73,74,76,],[-44,-42,41,-41,-40,-39,-43,-32,-42,41,41,-33,-31,-36,-35,41,41,-23,-18,-20,-25,-24,-27,None,-30,-19,-21,-22,-26,-28,None,41,-29,-34,41,41,41,]),u'AND':([3,5,6,9,14,16,18,20,21,22,44,46,47,48,49,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,73,74,76,],[-44,-42,27,-41,-40,-39,-43,-32,-42,27,27,-33,-31,-36,-35,27,-15,-23,-18,-20,-25,-24,-27,-17,-30,-19,-21,-22,-26,-28,-16,27,-29,-34,27,27,27,]),u'INT':([0,1,4,11,17,19,26,27,28,29,30,31,32,33,34,36,37,38,39,40,41,42,43,45,50,75,77,],[14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),u'FLOAT':([0,1,4,11,17,19,26,27,28,29,30,31,32,33,34,36,37,38,39,40,41,42,43,45,50,75,77,],[16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,]),u'GE':([3,5,6,9,14,16,18,20,21,22,44,46,47,48,49,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,73,74,76,],[-44,-42,30,-41,-40,-39,-43,-32,-42,30,30,-33,-31,-36,-35,30,30,None,None,None,-25,-24,-27,30,-30,None,None,None,-26,-28,30,30,-29,-34,30,30,30,]),u'FILTER':([0,1,4,11,17,19,26,27,28,29,30,31,32,33,34,36,37,38,39,40,41,42,43,45,50,75,77,],[18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,]),u'FLOORDIV':([3,5,6,9,14,16,18,20,21,22,44,46,47,48,49,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,73,74,76,],[-44,-42,33,-41,-40,-39,-43,-32,-42,33,33,-33,-31,-36,-35,33,33,33,33,33,33,33,-27,33,-30,33,33,33,-26,-28,33,33,-29,-34,33,33,33,]),u'NOT':([0,1,4,11,17,19,26,27,28,29,30,31,32,33,34,36,37,38,39,40,41,42,43,45,50,75,77,],[19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),u'RBRACKET':([3,4,9,14,16,18,20,21,22,23,24,46,47,48,49,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,74,],[-44,-45,-41,-40,-39,-43,-32,-42,-37,48,49,-33,-31,-36,-35,-15,-23,-18,-20,-25,-24,-27,-17,-30,-19,-21,-22,-26,-28,-16,-14,-29,-34,-38,]),u'OR':([3,5,6,9,14,16,18,20,21,22,44,46,47,48,49,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,73,74,76,],[-44,-42,42,-41,-40,-39,-43,-32,-42,42,42,-33,-31,-36,-35,42,-15,-23,-18,-20,-25,-24,-27,-17,-30,-19,-21,-22,-26,-28,-16,-14,-29,-34,42,42,42,]),u'MOD':([3,5,6,9,14,16,18,20,21,22,44,46,47,48,49,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,73,74,76,],[-44,-42,43,-41,-40,-39,-43,-32,-42,43,43,-33,-31,-36,-35,43,43,43,43,43,43,43,-27,43,-30,43,43,43,-26,-28,43,43,-29,-34,43,43,43,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {u'bind_expression':([0,45,],[10,10,]),u'expression_decl':([0,45,],[2,72,]),u'expression_list':([0,],[15,]),u'expression_decl_list':([0,],[12,]),u'logical_comma_expression':([4,],[24,]),u'statement':([0,],[7,]),u'conditional_expression':([26,77,],[53,78,]),u'logical_expression':([0,1,4,11,17,19,26,27,28,29,30,31,32,33,34,36,37,38,39,40,41,42,43,45,50,75,77,],[6,20,22,44,46,47,52,54,55,56,57,58,59,60,61,63,64,65,66,67,68,69,70,73,74,76,52,]),u'assign_expression':([0,45,],[13,13,]),u'empty':([0,4,],[8,23,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statement","S'",1,None,None,None),
  (u'statement -> expression_list',u'statement',1,'p_statement_expr','rule_parser.py',289),
  (u'statement -> empty',u'statement',1,'p_statement_expr','rule_parser.py',290),
  (u'expression_list -> logical_expression',u'expression_list',1,'p_expression_list_1','rule_parser.py',296),
  (u'expression_list -> expression_decl_list',u'expression_list',1,'p_expression_list_2','rule_parser.py',301),
  (u'expression_list -> expression_decl_list COMMA logical_expression',u'expression_list',3,'p_expression_list_3','rule_parser.py',306),
  (u'expression_decl_list -> expression_decl',u'expression_decl_list',1,'p_expression_decl_list_1','rule_parser.py',311),
  (u'expression_decl_list -> expression_decl_list COMMA expression_decl',u'expression_decl_list',3,'p_expression_decl_list_2','rule_parser.py',316),
  (u'expression_decl -> assign_expression',u'expression_decl',1,'p_expression_decl_1','rule_parser.py',321),
  (u'expression_decl -> bind_expression',u'expression_decl',1,'p_expression_decl_2','rule_parser.py',326),
  (u'assign_expression -> VARIABLE EQUALS conditional_expression',u'assign_expression',3,'p_statement_assign','rule_parser.py',331),
  (u'bind_expression -> VARIABLE COLON VARIABLE',u'bind_expression',3,'p_statement_bind','rule_parser.py',336),
  (u'conditional_expression -> logical_expression',u'conditional_expression',1,'p_expression_conditional_1','rule_parser.py',341),
  (u'conditional_expression -> logical_expression CONDITION logical_expression COLON conditional_expression',u'conditional_expression',5,'p_expression_conditional_2','rule_parser.py',346),
  (u'logical_expression -> logical_expression OR logical_expression',u'logical_expression',3,'p_expression_binop','rule_parser.py',351),
  (u'logical_expression -> logical_expression AND logical_expression',u'logical_expression',3,'p_expression_binop','rule_parser.py',352),
  (u'logical_expression -> logical_expression EQ logical_expression',u'logical_expression',3,'p_expression_binop','rule_parser.py',353),
  (u'logical_expression -> logical_expression NE logical_expression',u'logical_expression',3,'p_expression_binop','rule_parser.py',354),
  (u'logical_expression -> logical_expression LE logical_expression',u'logical_expression',3,'p_expression_binop','rule_parser.py',355),
  (u'logical_expression -> logical_expression LT logical_expression',u'logical_expression',3,'p_expression_binop','rule_parser.py',356),
  (u'logical_expression -> logical_expression GE logical_expression',u'logical_expression',3,'p_expression_binop','rule_parser.py',357),
  (u'logical_expression -> logical_expression GT logical_expression',u'logical_expression',3,'p_expression_binop','rule_parser.py',358),
  (u'logical_expression -> logical_expression IN logical_expression',u'logical_expression',3,'p_expression_binop','rule_parser.py',359),
  (u'logical_expression -> logical_expression NI logical_expression',u'logical_expression',3,'p_expression_binop','rule_parser.py',360),
  (u'logical_expression -> logical_expression ADD logical_expression',u'logical_expression',3,'p_expression_binop','rule_parser.py',361),
  (u'logical_expression -> logical_expression SUB logical_expression',u'logical_expression',3,'p_expression_binop','rule_parser.py',362),
  (u'logical_expression -> logical_expression MUL logical_expression',u'logical_expression',3,'p_expression_binop','rule_parser.py',363),
  (u'logical_expression -> logical_expression FLOORDIV logical_expression',u'logical_expression',3,'p_expression_binop','rule_parser.py',364),
  (u'logical_expression -> logical_expression DIV logical_expression',u'logical_expression',3,'p_expression_binop','rule_parser.py',365),
  (u'logical_expression -> logical_expression MOD logical_expression',u'logical_expression',3,'p_expression_binop','rule_parser.py',366),
  (u'logical_expression -> logical_expression PERIOD SYMBOL',u'logical_expression',3,'p_statement_attribute','rule_parser.py',407),
  (u'logical_expression -> NOT logical_expression',u'logical_expression',2,'p_expression_not','rule_parser.py',412),
  (u'logical_expression -> SUB logical_expression',u'logical_expression',2,'p_expression_neg','rule_parser.py',420),
  (u'logical_expression -> ADD logical_expression',u'logical_expression',2,'p_expression_pos','rule_parser.py',429),
  (u'logical_expression -> LPAREN logical_expression RPAREN',u'logical_expression',3,'p_expression_group','rule_parser.py',438),
  (u'logical_expression -> LBRACKET logical_comma_expression RBRACKET',u'logical_expression',3,'p_expression_list','rule_parser.py',443),
  (u'logical_expression -> LBRACKET empty RBRACKET',u'logical_expression',3,'p_expression_list','rule_parser.py',444),
  (u'logical_comma_expression -> logical_expression',u'logical_comma_expression',1,'p_expression_comma_1','rule_parser.py',450),
  (u'logical_comma_expression -> logical_comma_expression COMMA logical_expression',u'logical_comma_expression',3,'p_expression_comma_2','rule_parser.py',455),
  (u'logical_expression -> FLOAT',u'logical_expression',1,'p_expression_float','rule_parser.py',460),
  (u'logical_expression -> INT',u'logical_expression',1,'p_expression_int','rule_parser.py',465),
  (u'logical_expression -> STRING',u'logical_expression',1,'p_expression_string','rule_parser.py',470),
  (u'logical_expression -> VARIABLE',u'logical_expression',1,'p_expression_variable','rule_parser.py',475),
  (u'logical_expression -> FILTER',u'logical_expression',1,'p_expression_filter','rule_parser.py',480),
  (u'logical_expression -> SYMBOL',u'logical_expression',1,'p_expression_symbol','rule_parser.py',485),
  (u'empty -> <empty>',u'empty',0,'p_expression_empty','rule_parser.py',494),
]
